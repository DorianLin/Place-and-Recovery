{"ast":null,"code":"import { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LocationScreen from \"../screens/LocationScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      activeTintColor: Colors[colorScheme].tint,\n      headerStyle: {\n        backgroundColor: '#e3fbe3'\n      }\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"home\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Location\",\n      component: LocationScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n              size = _ref3.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"map\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n              size = _ref4.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"cog-outline\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n              size = _ref5.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"account\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["C:/github/GT_1358_Project_Design/app/src/navigation/index.tsx"],"names":["MaterialCommunityIcons","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","NotFoundScreen","HomeScreen","LocationScreen","ProfileScreen","SettingsScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","BottomTab","activeTintColor","tint","headerStyle","backgroundColor","tabBarIcon","color","size"],"mappings":"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","sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport LocationScreen from '../screens/LocationScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport SettingsScreen from '../screens/SettingsScreen';\r\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n    initialRouteName=\"Home\"\r\n    screenOptions={{\r\n      activeTintColor: Colors[colorScheme].tint,\r\n      headerStyle: {\r\n        backgroundColor: '#e3fbe3'\r\n      },\r\n    }}>\r\n    <BottomTab.Screen\r\n      name=\"Home\"\r\n      component={HomeScreen}\r\n      options={{\r\n        tabBarIcon: ({ color, size }) => (\r\n          <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n        ),\r\n      }}\r\n    />\r\n    <BottomTab.Screen\r\n      name=\"Location\"\r\n      component={LocationScreen}\r\n      options={{\r\n        tabBarIcon: ({ color, size }) => (\r\n          <MaterialCommunityIcons\r\n            name=\"map\"\r\n            color={color}\r\n            size={size}\r\n          />\r\n        ),\r\n      }}\r\n    />\r\n    <BottomTab.Screen\r\n      name=\"Settings\"\r\n      component={SettingsScreen}\r\n      options={{\r\n        tabBarIcon: ({ color, size }) => (\r\n          <MaterialCommunityIcons\r\n            name=\"cog-outline\"\r\n            color={color}\r\n            size={size}\r\n          />\r\n        ),\r\n      }}\r\n    />\r\n    <BottomTab.Screen\r\n      name=\"Profile\"\r\n      component={ProfileScreen}\r\n      options={{\r\n        tabBarIcon: ({ color, size }) => (\r\n          <MaterialCommunityIcons\r\n            name=\"account\"\r\n            color={color}\r\n            size={size}\r\n          />\r\n        ),\r\n      }}\r\n    />\r\n  </BottomTab.Navigator>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}