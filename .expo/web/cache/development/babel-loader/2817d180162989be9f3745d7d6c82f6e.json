{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleLogin = function handleLogin() {\n    axios.post(\"http://localhost:2400/api/auth/login\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      var message = response.data.message;\n      var status = response.status,\n          data = response.data;\n\n      if (status == 200) {\n        console.log(\"logged in\");\n        navigation.navigate(\"MainScreen\");\n      } else {\n        console.log(message);\n      }\n\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleForget = function handleForget() {};\n\n  var handleSignUp = function handleSignUp() {\n    navigation.navigate(\"Registration\");\n  };\n\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/images/bg.jpg\"),\n    resizeMode: \"cover\",\n    style: styles.image,\n    children: _jsx(KeyboardAwareScrollView, {\n      contentContainerStyle: styles.container,\n      children: _jsxs(View, {\n        style: [styles.frameContainer, styles.shadowProp],\n        children: [_jsx(Text, {\n          style: styles.TitleText,\n          children: \"Welcome\"\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Email\",\n            placeholderTextColor: \"gray\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return setEmail(text);\n            }\n          })\n        }), _jsx(View, {\n          style: styles.inputContainer,\n          children: _jsx(TextInput, {\n            style: styles.textInput,\n            placeholder: \"Password\",\n            placeholderTextColor: \"gray\",\n            secureTextEntry: true,\n            value: password,\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            }\n          })\n        }), _jsx(View, {\n          style: {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: 40\n          },\n          children: _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: handleLogin,\n            activeOpacity: 0.85,\n            children: _jsx(Text, {\n              style: styles.buttonTextWhite,\n              children: \"Login\"\n            })\n          })\n        }), _jsx(Text, {\n          style: {\n            marginTop: 20\n          },\n          onPress: handleForget,\n          children: \"Forgot Password ?\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            marginTop: 40\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: \"gray\"\n            },\n            children: \"Don't have an account? \"\n          }), _jsx(Text, {\n            style: {\n              fontWeight: \"bold\"\n            },\n            onPress: handleSignUp,\n            children: \"Sign Up\"\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  frameContainer: {\n    width: \"80%\",\n    height: \"50%\",\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 16\n  },\n  shadowProp: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5\n  },\n  TitleText: {\n    textAlign: \"center\",\n    color: \"#072B4F\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    paddingBottom: 30,\n    paddingTop: 30\n  },\n  inputContainer: {\n    width: \"80%\",\n    borderBottomColor: \"grey\",\n    borderBottomWidth: 1.5\n  },\n  textInput: {\n    width: \"70%\",\n    color: \"#072B4F\",\n    fontSize: 17,\n    marginTop: 5,\n    paddingVertical: 10,\n    borderRadius: 10,\n    borderBottomColor: \"white\"\n  },\n  button: {\n    width: 250,\n    height: 45,\n    backgroundColor: \"#072B4F\",\n    padding: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    marginTop: 5\n  },\n  buttonTextWhite: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  buttonTextDark: {\n    textAlign: \"center\",\n    color: \"#072B4F\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/dorian/RN_Projects/JD_Project/GT_1358_Project_Design/app/src/screens/LoginScreen.tsx"],"names":["React","useState","KeyboardAwareScrollView","TouchableOpacity","axios","LoginScreen","navigation","email","setEmail","password","setPassword","handleLogin","post","then","response","message","data","status","console","log","navigate","catch","error","handleForget","handleSignUp","require","styles","image","container","frameContainer","shadowProp","TitleText","inputContainer","textInput","text","alignItems","justifyContent","marginTop","button","buttonTextWhite","flexDirection","color","fontWeight","StyleSheet","create","flex","width","height","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","fontSize","paddingBottom","paddingTop","borderBottomColor","borderBottomWidth","padding","buttonTextDark"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport axios from \"axios\";\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    axios\r\n      .post(\"http://localhost:2400/api/auth/login\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        const { message } = response.data;\r\n        const { status, data } = response;\r\n        if (status == 200) {\r\n          console.log(\"logged in\");\r\n          navigation.navigate(\"MainScreen\");\r\n        } else {\r\n          console.log(message);\r\n          // todo alert\r\n        }\r\n        console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const handleForget = () => {};\r\n  const handleSignUp = () => {\r\n    navigation.navigate(\"Registration\");\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../assets/images/bg.jpg\")}\r\n      resizeMode=\"cover\"\r\n      style={styles.image}\r\n    >\r\n      <KeyboardAwareScrollView contentContainerStyle={styles.container}>\r\n        <View style={[styles.frameContainer, styles.shadowProp]}>\r\n          <Text style={styles.TitleText}>Welcome</Text>\r\n\r\n          <View style={styles.inputContainer}>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"gray\"\r\n              value={email}\r\n              onChangeText={(text) => setEmail(text)}\r\n            />\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n            <TextInput\r\n              style={styles.textInput}\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"gray\"\r\n              secureTextEntry\r\n              value={password}\r\n              onChangeText={(text) => setPassword(text)}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: 40,\r\n            }}\r\n          >\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={handleLogin}\r\n              activeOpacity={0.85}\r\n            >\r\n              <Text style={styles.buttonTextWhite}>Login</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <Text style={{ marginTop: 20 }} onPress={handleForget}>\r\n            Forgot Password ?\r\n          </Text>\r\n\r\n          <View style={{ flexDirection: \"row\", marginTop: 40 }}>\r\n            <Text style={{ color: \"gray\" }}>Don't have an account? </Text>\r\n            <Text style={{ fontWeight: \"bold\" }} onPress={handleSignUp}>\r\n              Sign Up\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </KeyboardAwareScrollView>\r\n    </ImageBackground>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  frameContainer: {\r\n    width: \"80%\",\r\n    height: \"50%\",\r\n    backgroundColor: \"#fff\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 16,\r\n  },\r\n  shadowProp: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n  },\r\n  TitleText: {\r\n    textAlign: \"center\",\r\n    color: \"#072B4F\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    paddingBottom: 30,\r\n    paddingTop: 30,\r\n  },\r\n  inputContainer: {\r\n    width: \"80%\",\r\n    borderBottomColor: \"grey\",\r\n    borderBottomWidth: 1.5,\r\n  },\r\n  textInput: {\r\n    width: \"70%\",\r\n    color: \"#072B4F\",\r\n    fontSize: 17,\r\n    marginTop: 5,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    borderBottomColor: \"white\",\r\n  },\r\n  button: {\r\n    width: 250,\r\n    height: 45,\r\n    backgroundColor: \"#072B4F\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 8,\r\n    marginTop: 5,\r\n  },\r\n  buttonTextWhite: {\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonTextDark: {\r\n    textAlign: \"center\",\r\n    color: \"#072B4F\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}