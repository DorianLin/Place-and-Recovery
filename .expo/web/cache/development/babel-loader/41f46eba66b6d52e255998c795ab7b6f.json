{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Text } from \"../components/Themed\";\nimport ButtonDesign from \"../components/Button\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      firstName = _React$useState4[0],\n      setFirstName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      lastName = _React$useState6[0],\n      setLastName = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      phoneNumber = _React$useState10[0],\n      setPhoneNumber = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      confirmPassword = _React$useState12[0],\n      setConfirmPassword = _React$useState12[1];\n\n  var handleRegistration = function handleRegistration(signUpInput) {\n    axios.post('http://localhost:2400/api/auth/signup', signUpInput).then(function (response) {\n      console.log(response.data);\n      var res = response.data;\n      var message = res.message,\n          status = res.status,\n          data = res.data;\n\n      if (status == 'SUCCESS') {\n        navigation.navigate('MainScreen');\n      } else {\n        console.log(message);\n      }\n    }).catch(function (error) {\n      console.log(error);\n      console.log(error.response.data);\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1,\n        justifyContent: 'center'\n      },\n      children: _jsxs(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Register\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"First Name\",\n          maxLength: 15,\n          onChangeText: function onChangeText(inp) {\n            return setFirstName(inp);\n          },\n          value: firstName\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Last Name\",\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setLastName(inp);\n          },\n          value: lastName\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          maxLength: 30,\n          onChangeText: function onChangeText(inp) {\n            return setEmail(inp);\n          },\n          value: email\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Phone Number\",\n          maxLength: 30,\n          onChangeText: function onChangeText(inp) {\n            return setPhoneNumber(inp);\n          },\n          value: phoneNumber\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setPassword(inp);\n          },\n          value: password,\n          secureTextEntry: true\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Confirm Password\",\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setConfirmPassword(inp);\n          },\n          value: confirmPassword,\n          secureTextEntry: true\n        }), _jsx(ButtonDesign, {\n          name: \"Register\",\n          onPress: function onPress() {\n            return handleRegistration({\n              firstName: firstName,\n              lastName: lastName,\n              email: email,\n              password: password,\n              phoneNumber: phoneNumber\n            });\n          }\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"By registering, you automatically accept the Terms & Policies of Neighborhood app.\"\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: {\n    height: 45,\n    width: 290,\n    margin: 15,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 10,\n    fontSize: 18,\n    borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F'\n  }\n});","map":{"version":3,"sources":["/Users/dorian/RN_Projects/JD_Project/GT_1358_Project_Design/app/src/screens/RegistrationScreen.tsx"],"names":["React","Text","ButtonDesign","SafeAreaView","axios","RegistrationScreen","navigation","useState","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","phoneNumber","setPhoneNumber","confirmPassword","setConfirmPassword","handleRegistration","signUpInput","post","then","response","console","log","data","res","message","status","navigate","catch","error","flex","justifyContent","flexGrow","styles","container","title","input","inp","label","StyleSheet","create","alignItems","fontSize","marginBottom","fontWeight","color","height","width","margin","paddingLeft","borderWidth","borderRadius","borderColor","textAlign","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ReactDOM } from 'react';\nimport { StyleSheet, Button, TextInput, TouchableOpacity, ScrollView, KeyboardAvoidingView, Alert } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport ButtonDesign from '../components/Button';\nimport { useLinkProps } from '@react-navigation/native';\nimport HomeScreen from '../screens/HomeScreen';\nimport OpeningScreen from './OpeningScreen';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport axios from 'axios';\n\n\n\n\nexport default function RegistrationScreen({navigation}) {\n\n\n    const [email, setEmail] = React.useState(\"\");\n    const [firstName, setFirstName] = React.useState(\"\");\n    const [lastName, setLastName] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n    const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\n    \n    const handleRegistration = (signUpInput) => {\n      \n      axios.post('http://localhost:2400/api/auth/signup', signUpInput).then((response) => {\n        console.log(response.data);\n        const res = response.data;\n        const {message, status, data} = res;\n        if (status == 'SUCCESS') {\n          navigation.navigate('MainScreen');\n        } else {\n          console.log(message);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    }\n    \n  return (\n    \n  <SafeAreaView style={{flex:1, justifyContent:'center'}}>\n      <ScrollView contentContainerStyle = {{flexGrow: 1, justifyContent: 'center'}}>\n        <KeyboardAvoidingView style={styles.container} behavior = \"padding\">\n    \n        <Text style = {styles.title}>Register</Text>\n          \n        <TextInput style = {styles.input}\n          placeholder = 'First Name'\n          maxLength = {15}\n          onChangeText={inp => setFirstName(inp)}\n          value = {firstName}\n        />\n        <TextInput style = {styles.input}\n          placeholder = 'Last Name'\n          maxLength = {20}\n          onChangeText={inp => setLastName(inp)}\n          value = {lastName}\n        />\n        <TextInput style = {styles.input}\n          placeholder = 'Email'\n          maxLength = {30}\n          onChangeText={inp => setEmail(inp)}\n          value = {email}\n        />\n\n        <TextInput style = {styles.input}\n          placeholder = 'Phone Number'\n          maxLength = {30}\n          onChangeText={inp => setPhoneNumber(inp)}\n          value = {phoneNumber}\n        />\n        <TextInput style = {styles.input}\n          placeholder = 'Password'\n          maxLength = {20}\n          onChangeText={inp => setPassword(inp)}\n          value = {password}\n          secureTextEntry ={true}\n        />\n        \n        <TextInput style = {styles.input}\n          placeholder = 'Confirm Password'\n          maxLength = {20}\n          onChangeText={inp => setConfirmPassword(inp)}\n          value = {confirmPassword}\n          secureTextEntry ={true}\n        />\n\n        <ButtonDesign name='Register' onPress={() => handleRegistration({firstName: firstName, lastName: lastName, email: email, password: password, phoneNumber: phoneNumber})}/>\n        <Text style = {styles.label}>By registering, you automatically accept the Terms & Policies of Neighborhood app.</Text> \n        \n        </KeyboardAvoidingView>\n      </ScrollView>\n  </SafeAreaView>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: { \n      height: 45,\n      width: 290,\n      margin: 15,\n      paddingLeft: 10,\n      borderWidth: 1,\n      borderRadius: 10,\n      fontSize: 18,\n      borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F', \n  },\n \n  \n});\n\n//Potential solutions for form submissions and validations\n\n/* export class UserValidation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      requiredFieldErrorMessage: \"\",\n      passwordErrorMessage: \"\",\n      confirmPasswordErrorMessage: \"\",\n      loading: false,\n\n    }\n  }\n\n  // Authenticate User: https://infinitbility.com/how-to-check-password-and-confirm-password-in-react-native\n\n  formValidation = async () => {\n    this.setState({loading: true})\n    let errorFlag = false\n\n    // Input Validation\n    if (this.state.firstName.length == 0) {\n      errorFlag: true\n      this.setState({})\n    }\n\n  }\n} */\n\n// Form Validation Tutorial: https://www.youtube.com/watch?v=uxawinQ2tTk\n"]},"metadata":{},"sourceType":"module"}