{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport axios from \"axios\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AuthContext } from \"../navigation/context\";\nimport IsTestMode from \"../constants/TestMode\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var testmode = IsTestMode();\n\n  var handleLogin = function handleLogin() {\n    if (testmode) {\n      signIn();\n      return;\n    }\n\n    axios.post(\"http://localhost:2400/api/auth/login\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      var message = response.data.message;\n      var status = response.status,\n          data = response.data;\n\n      if (status == 200) {\n        console.log(\"logged in\");\n        signIn(data.token);\n      } else {\n        console.log(message);\n      }\n    }).catch(function (error) {\n      Alert.alert(\"Email or password is incorrect\");\n    });\n  };\n\n  var handleForget = function handleForget() {};\n\n  var handleSignUp = function handleSignUp() {\n    navigation.navigate(\"Registration\");\n  };\n\n  return _jsx(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1,\n      justifyContent: \"center\"\n    },\n    children: _jsx(ImageBackground, {\n      source: require(\"../assets/images/bg3.jpg\"),\n      resizeMode: \"cover\",\n      blurRadius: 8,\n      style: styles.image,\n      children: _jsx(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        children: _jsxs(View, {\n          style: [styles.frameContainer, styles.shadowProp],\n          children: [_jsx(Text, {\n            style: styles.TitleText,\n            children: \"Welcome\"\n          }), _jsx(View, {\n            style: styles.inputContainer,\n            children: _jsx(TextInput, {\n              style: styles.textInput,\n              placeholder: \"Email\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              placeholderTextColor: \"#072B4F\",\n              value: email,\n              onChangeText: function onChangeText(text) {\n                return setEmail(text);\n              }\n            })\n          }), _jsx(View, {\n            style: styles.inputContainer,\n            children: _jsx(TextInput, {\n              style: styles.textInput,\n              placeholder: \"Password\",\n              autoCapitalize: \"none\",\n              autoCorrect: false,\n              placeholderTextColor: \"#072B4F\",\n              secureTextEntry: true,\n              value: password,\n              onChangeText: function onChangeText(text) {\n                return setPassword(text);\n              }\n            })\n          }), _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: 40\n            },\n            children: _jsx(TouchableOpacity, {\n              style: styles.button,\n              onPress: handleLogin,\n              activeOpacity: 0.85,\n              children: _jsx(Text, {\n                style: styles.buttonTextWhite,\n                children: \"Login\"\n              })\n            })\n          }), _jsx(Text, {\n            style: {\n              marginTop: 20\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"EmailVerificationScreen\");\n            },\n            children: \"Forgot Password ?\"\n          }), _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              marginTop: 40\n            },\n            children: [_jsx(Text, {\n              style: styles.contentText,\n              children: \"Don't have an account? \"\n            }), _jsx(Text, {\n              style: styles.contentTextTouch,\n              onPress: handleSignUp,\n              children: \"Sign Up\"\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  frameContainer: {\n    width: \"80%\",\n    flex: 0.1,\n    backgroundColor: \"#FFFFFF99\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 16\n  },\n  shadowProp: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5\n  },\n  TitleText: {\n    textAlign: \"center\",\n    color: \"#072B4F\",\n    fontSize: 25,\n    fontWeight: \"bold\",\n    paddingBottom: 30,\n    paddingTop: 30\n  },\n  inputContainer: {\n    width: \"80%\",\n    borderBottomColor: \"#072B4F\",\n    borderBottomWidth: 1.5\n  },\n  textInput: {\n    width: \"95%\",\n    color: \"#072B4F\",\n    fontSize: 17,\n    marginTop: 5,\n    paddingVertical: 10,\n    borderRadius: 10,\n    borderBottomColor: \"white\"\n  },\n  button: {\n    width: 250,\n    height: 45,\n    backgroundColor: \"#072B4F\",\n    padding: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    marginTop: 5\n  },\n  buttonTextWhite: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  buttonTextDark: {\n    textAlign: \"center\",\n    color: \"#072B4F\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  contentText: {\n    textAlign: \"center\",\n    color: \"#072B4F\",\n    fontSize: 15,\n    fontWeight: \"normal\"\n  },\n  contentTextTouch: {\n    textAlign: \"center\",\n    color: \"#072B4F\",\n    fontSize: 15,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/dorian/RN_Projects/JD_Project/GT_1358_Project_Design/app/src/screens/LoginScreen.tsx"],"names":["React","useState","TouchableOpacity","axios","AuthContext","IsTestMode","LoginScreen","navigation","email","setEmail","password","setPassword","useContext","signIn","testmode","handleLogin","post","then","response","message","data","status","console","log","token","catch","error","Alert","alert","handleForget","handleSignUp","navigate","flexGrow","justifyContent","require","styles","image","container","frameContainer","shadowProp","TitleText","inputContainer","textInput","text","alignItems","marginTop","button","buttonTextWhite","flexDirection","contentText","contentTextTouch","StyleSheet","create","flex","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","textAlign","color","fontSize","fontWeight","paddingBottom","paddingTop","borderBottomColor","borderBottomWidth","padding","buttonTextDark"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport axios from \"axios\";\r\nimport { ScrollView } from \"react-native\";\r\nimport { AuthContext } from \"../navigation/context\";\r\nimport IsTestMode from \"../constants/TestMode\";\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { signIn } = React.useContext(AuthContext);\r\n\r\n  let testmode = IsTestMode();\r\n\r\n  const handleLogin = () => {\r\n    if (testmode) {\r\n      signIn();\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"http://localhost:2400/api/auth/login\", {\r\n        email: email,\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        const { message } = response.data;\r\n        const { status, data } = response;\r\n        if (status == 200) {\r\n          console.log(\"logged in\");\r\n          signIn(data.token);\r\n        } else {\r\n          // todo\r\n          console.log(message);\r\n        }\r\n        // console.log(response);\r\n      })\r\n      .catch((error) => {\r\n        Alert.alert(\"Email or password is incorrect\");\r\n      });\r\n  };\r\n  const handleForget = () => {};\r\n  const handleSignUp = () => {\r\n    navigation.navigate(\"Registration\");\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      contentContainerStyle={{ flexGrow: 1, justifyContent: \"center\" }}\r\n    >\r\n      <ImageBackground\r\n        source={require(\"../assets/images/bg3.jpg\")}\r\n        resizeMode=\"cover\"\r\n        blurRadius={8}\r\n        style={styles.image}\r\n      >\r\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\r\n          <View style={[styles.frameContainer, styles.shadowProp]}>\r\n            <Text style={styles.TitleText}>Welcome</Text>\r\n\r\n            <View style={styles.inputContainer}>\r\n              <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Email\"\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                placeholderTextColor=\"#072B4F\"\r\n                value={email}\r\n                onChangeText={(text) => setEmail(text)}\r\n              />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n              <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Password\"\r\n                autoCapitalize=\"none\"\r\n                autoCorrect={false}\r\n                placeholderTextColor=\"#072B4F\"\r\n                secureTextEntry\r\n                value={password}\r\n                onChangeText={(text) => setPassword(text)}\r\n              />\r\n            </View>\r\n            <View\r\n              style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginTop: 40,\r\n              }}\r\n            >\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={handleLogin}\r\n                activeOpacity={0.85}\r\n              >\r\n                <Text style={styles.buttonTextWhite}>Login</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <Text\r\n              style={{ marginTop: 20 }}\r\n              onPress={() => navigation.navigate(\"EmailVerificationScreen\")}\r\n            >\r\n              Forgot Password ?\r\n            </Text>\r\n\r\n            <View style={{ flexDirection: \"row\", marginTop: 40 }}>\r\n              <Text style={styles.contentText}>Don't have an account? </Text>\r\n              <Text style={styles.contentTextTouch} onPress={handleSignUp}>\r\n                Sign Up\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </ImageBackground>\r\n    </ScrollView>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  frameContainer: {\r\n    width: \"80%\",\r\n    flex: 0.1,\r\n    backgroundColor: \"#FFFFFF99\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 16,\r\n  },\r\n  shadowProp: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 0 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 5,\r\n  },\r\n  TitleText: {\r\n    textAlign: \"center\",\r\n    color: \"#072B4F\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    paddingBottom: 30,\r\n    paddingTop: 30,\r\n  },\r\n  inputContainer: {\r\n    width: \"80%\",\r\n    borderBottomColor: \"#072B4F\",\r\n    borderBottomWidth: 1.5,\r\n  },\r\n  textInput: {\r\n    width: \"95%\",\r\n    color: \"#072B4F\",\r\n    fontSize: 17,\r\n    marginTop: 5,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    borderBottomColor: \"white\",\r\n  },\r\n  button: {\r\n    width: 250,\r\n    height: 45,\r\n    backgroundColor: \"#072B4F\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 8,\r\n    marginTop: 5,\r\n  },\r\n  buttonTextWhite: {\r\n    textAlign: \"center\",\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonTextDark: {\r\n    textAlign: \"center\",\r\n    color: \"#072B4F\",\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  contentText: {\r\n    textAlign: \"center\",\r\n    color: \"#072B4F\",\r\n    fontSize: 15,\r\n    fontWeight: \"normal\",\r\n  },\r\n  contentTextTouch: {\r\n    textAlign: \"center\",\r\n    color: \"#072B4F\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}