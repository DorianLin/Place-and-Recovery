{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Text } from \"../components/Themed\";\nimport ButtonDesign from \"../components/Button\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport { AuthContext } from \"../navigation/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      firstName = _React$useState4[0],\n      setFirstName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      lastName = _React$useState6[0],\n      setLastName = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      phoneNumber = _React$useState10[0],\n      setPhoneNumber = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      confirmPassword = _React$useState12[0],\n      setConfirmPassword = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      showErrorMessage = _React$useState14[0],\n      setShowErrorMessage = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      showEmailErrorMessage = _React$useState16[0],\n      setShowEmailErrorMessage = _React$useState16[1];\n\n  var _React$useState17 = React.useState(\"\"),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      error = _React$useState18[0],\n      setError = _React$useState18[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      signUp = _React$useContext.signUp;\n\n  var passwordMatchCheck = function passwordMatchCheck() {\n    if (firstName == \"\" || lastName == \"\" || email == \"\" || password == \"\" || confirmPassword == \"\" || phoneNumber == \"\") {\n      setShowErrorMessage(true);\n      setError(\"*Please fill in all the fields\");\n    } else if (password == confirmPassword) {\n      var emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (emailValidation.test(email)) {\n        if (password.length >= 6) {\n          handleRegistration({\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            phoneNumber: phoneNumber\n          });\n        } else {\n          setShowEmailErrorMessage(true);\n          setError(\"*Password has to contain at least 6 characters\");\n        }\n      } else {\n        setShowEmailErrorMessage(true);\n        setError(\"*Please enter valid email\");\n      }\n    } else {\n      setShowEmailErrorMessage(true);\n      setError(\"*Passwords don't match\");\n    }\n  };\n\n  var handleRegistration = function handleRegistration(signUpInput) {\n    axios.post(\"http://localhost:2400/api/auth/signup\", signUpInput).then(function (response) {\n      console.log(response.data);\n      var message = response.data.message;\n      var status = response.status,\n          data = response.data;\n      console.log(status);\n\n      if (status == 200) {\n        signUp(data.token);\n      }\n    }).catch(function (error) {\n      var message = error.response.data.message;\n      alert(message);\n      console.log(error);\n      console.log(error.response.data);\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    children: _jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1,\n        justifyContent: \"center\"\n      },\n      children: _jsxs(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Register\"\n        }), showErrorMessage ? _jsx(Text, {\n          style: styles.errorMessage,\n          children: error\n        }) : null, _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"First Name\",\n          maxLength: 15,\n          onChangeText: function onChangeText(inp) {\n            return setFirstName(inp);\n          },\n          value: firstName\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Last Name\",\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setLastName(inp);\n          },\n          value: lastName\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          maxLength: 30,\n          onChangeText: function onChangeText(inp) {\n            return setEmail(inp);\n          },\n          value: email\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Phone Number\",\n          maxLength: 10,\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(inp) {\n            return setPhoneNumber(inp);\n          },\n          value: phoneNumber\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setPassword(inp);\n          },\n          value: password,\n          secureTextEntry: true\n        }), _jsx(TextInput, {\n          style: [styles.input, password == confirmPassword ? styles.input : {\n            borderColor: \"red\"\n          }],\n          placeholder: \"Confirm Password\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setConfirmPassword(inp);\n          },\n          value: confirmPassword,\n          secureTextEntry: true\n        }), _jsx(ButtonDesign, {\n          name: \"Register\",\n          onPress: function onPress() {\n            return passwordMatchCheck();\n          }\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"By registering, you automatically accept the Terms & Policies of Neighborhood app.\"\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: {\n    height: 45,\n    width: 290,\n    margin: 15,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 10,\n    fontSize: 18,\n    borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F'\n  },\n  errorMessage: {\n    textAlign: 'center',\n    marginLeft: 40,\n    marginRight: 40,\n    color: 'red'\n  }\n});","map":{"version":3,"sources":["/Users/dorian/RN_Projects/JD_Project/GT_1358_Project_Design/app/src/screens/RegistrationScreen.tsx"],"names":["React","Text","ButtonDesign","SafeAreaView","axios","AuthContext","RegistrationScreen","navigation","useState","email","setEmail","firstName","setFirstName","lastName","setLastName","password","setPassword","phoneNumber","setPhoneNumber","confirmPassword","setConfirmPassword","showErrorMessage","setShowErrorMessage","showEmailErrorMessage","setShowEmailErrorMessage","error","setError","useContext","signUp","passwordMatchCheck","emailValidation","test","length","handleRegistration","signUpInput","post","then","response","console","log","data","message","status","token","catch","alert","flex","justifyContent","flexGrow","styles","container","title","errorMessage","input","inp","borderColor","label","StyleSheet","create","alignItems","fontSize","marginBottom","fontWeight","color","height","width","margin","paddingLeft","borderWidth","borderRadius","textAlign","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ReactDOM } from 'react';\nimport { StyleSheet, Button, TextInput, TouchableOpacity, ScrollView, KeyboardAvoidingView, Alert } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport ButtonDesign from '../components/Button';\nimport { useLinkProps } from '@react-navigation/native';\nimport HomeScreen from '../screens/HomeScreen';\nimport OpeningScreen from './OpeningScreen';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport axios from 'axios';\n\nimport { AuthContext } from \"../navigation/context\";\n\nexport default function RegistrationScreen({ navigation }) {\n  const [email, setEmail] = React.useState(\"\");\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n  const [confirmPassword, setConfirmPassword] = React.useState(\"\");\n  const [showErrorMessage, setShowErrorMessage] = React.useState(false);\n  const [showEmailErrorMessage, setShowEmailErrorMessage] =\n    React.useState(false);\n  const [error, setError] = React.useState(\"\");\n\n  const { signUp } = React.useContext(AuthContext);\n\n  const passwordMatchCheck = () => {\n    if (\n      firstName == \"\" ||\n      lastName == \"\" ||\n      email == \"\" ||\n      password == \"\" ||\n      confirmPassword == \"\" ||\n      phoneNumber == \"\"\n    ) {\n      setShowErrorMessage(true);\n      setError(\"*Please fill in all the fields\");\n    } else if (password == confirmPassword) {\n      let emailValidation =\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (emailValidation.test(email)) {\n        if (password.length >= 6) {\n          handleRegistration({\n            firstName,\n            lastName,\n            email,\n            password,\n            phoneNumber,\n          });\n        } else {\n          setShowEmailErrorMessage(true);\n          setError(\"*Password has to contain at least 6 characters\");\n        }\n      } else {\n        setShowEmailErrorMessage(true);\n        setError(\"*Please enter valid email\");\n      }\n    } else {\n      setShowEmailErrorMessage(true);\n      setError(\"*Passwords don't match\");\n    }\n  };\n\n  const handleRegistration = (signUpInput) => {\n    axios\n      .post(\"http://localhost:2400/api/auth/signup\", signUpInput)\n      .then((response) => {\n        console.log(response.data);\n        const { message } = response.data;\n        const { status, data } = response;\n        console.log(status);\n        if (status == 200) {\n          // navigation.navigate('MainScreen');\n          signUp(data.token)\n        }\n      })\n      .catch((error) => {\n        const { message } = error.response.data;\n        alert(message);\n        console.log(error);\n        console.log(error.response.data);\n      });\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1, justifyContent: \"center\" }}>\n      <ScrollView\n        contentContainerStyle={{ flexGrow: 1, justifyContent: \"center\" }}\n      >\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n          <Text style={styles.title}>Register</Text>\n          {showErrorMessage ? (\n            <Text style={styles.errorMessage}>{error}</Text>\n          ) : null}\n\n          <TextInput\n            style={styles.input}\n            placeholder=\"First Name\"\n            maxLength={15}\n            onChangeText={(inp) => setFirstName(inp)}\n            value={firstName}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Last Name\"\n            maxLength={20}\n            onChangeText={(inp) => setLastName(inp)}\n            value={lastName}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Email\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            maxLength={30}\n            onChangeText={(inp) => setEmail(inp)}\n            value={email}\n          />\n\n          <TextInput\n            style={styles.input}\n            placeholder=\"Phone Number\"\n            maxLength={10}\n            keyboardType=\"numeric\"\n            onChangeText={(inp) => setPhoneNumber(inp)}\n            value={phoneNumber}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Password\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            maxLength={20}\n            onChangeText={(inp) => setPassword(inp)}\n            value={password}\n            secureTextEntry={true}\n          />\n\n          <TextInput\n            style={[\n              styles.input,\n              password == confirmPassword\n                ? styles.input\n                : { borderColor: \"red\" },\n            ]}\n            placeholder=\"Confirm Password\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            maxLength={20}\n            onChangeText={(inp) => setConfirmPassword(inp)}\n            value={confirmPassword}\n            secureTextEntry={true}\n          />\n\n          <ButtonDesign name=\"Register\" onPress={() => passwordMatchCheck()} />\n          <Text style={styles.label}>\n            By registering, you automatically accept the Terms & Policies of\n            Neighborhood app.\n          </Text>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: { \n      height: 45,\n      width: 290,\n      margin: 15,\n      paddingLeft: 10,\n      borderWidth: 1,\n      borderRadius: 10,\n      fontSize: 18,\n      borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F', \n  },\n  errorMessage: {\n    textAlign: 'center',\n   \n    marginLeft: 40,\n    marginRight: 40,\n    color: 'red', \n  },\n  \n \n  \n});\n\n//Potential solutions for form submissions and validations\n\n/* export class UserValidation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      requiredFieldErrorMessage: \"\",\n      passwordErrorMessage: \"\",\n      confirmPasswordErrorMessage: \"\",\n      loading: false,\n\n    }\n  }\n\n  // Authenticate User: https://infinitbility.com/how-to-check-password-and-confirm-password-in-react-native\n\n  formValidation = async () => {\n    this.setState({loading: true})\n    let errorFlag = false\n\n    // Input Validation\n    if (this.state.firstName.length == 0) {\n      errorFlag: true\n      this.setState({})\n    }\n\n  }\n} */\n\n// Form Validation Tutorial: https://www.youtube.com/watch?v=uxawinQ2tTk\n"]},"metadata":{},"sourceType":"module"}