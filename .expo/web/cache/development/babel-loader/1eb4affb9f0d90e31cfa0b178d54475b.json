{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text } from \"../components/Themed\";\nimport ButtonDesign from \"../components/Button\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Verification(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      verification = _React$useState2[0],\n      setVerificationCode = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      confirmPassword = _React$useState6[0],\n      setConfirmPassword = _React$useState6[1];\n\n  var email = route.params.email;\n\n  var handleChangePassword = function handleChangePassword(email, resetCode, newPassword) {\n    console.log(resetCode);\n    console.log(email);\n    console.log(newPassword);\n    axios.post(\"http://localhost:2400/api/auth/resetpassword\", {\n      email: email,\n      resetCode: resetCode,\n      newPassword: newPassword\n    }).then(function (response) {\n      var message = response.data.message;\n      var status = response.status,\n          data = response.data;\n\n      if (status == 200) {\n        Alert.alert(\"Your password is reset!\");\n        navigation.navigate(\"Login\");\n      }\n    }).catch(function (error) {\n      console.log(\"error\");\n      var message = error.response.data.message;\n      alert(message);\n      console.log(error);\n      console.log(error.response.data);\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    children: _jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1,\n        justifyContent: \"center\"\n      },\n      children: _jsxs(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Verification\"\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Please enter the verification code\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Verification Code\",\n          maxLength: 15,\n          value: verification,\n          onChangeText: function onChangeText(inp) {\n            return setVerificationCode(inp);\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setPassword(inp);\n          },\n          value: password,\n          secureTextEntry: true\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Confirm Password\",\n          maxLength: 20,\n          onChangeText: function onChangeText(inp) {\n            return setConfirmPassword(inp);\n          },\n          value: confirmPassword,\n          secureTextEntry: true\n        }), _jsx(ButtonDesign, {\n          name: \"Confirm\",\n          onPress: function onPress() {\n            return handleChangePassword(email, verification, password);\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: {\n    height: 45,\n    width: 290,\n    margin: 15,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 10,\n    fontSize: 18,\n    borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F'\n  }\n});","map":{"version":3,"sources":["/Users/dorian/RN_Projects/JD_Project/GT_1358_Project_Design/app/src/screens/Verification.tsx"],"names":["React","Text","ButtonDesign","SafeAreaView","axios","Verification","route","navigation","useState","verification","setVerificationCode","password","setPassword","confirmPassword","setConfirmPassword","email","params","handleChangePassword","resetCode","newPassword","console","log","post","then","response","message","data","status","Alert","alert","navigate","catch","error","flex","justifyContent","flexGrow","styles","container","title","label","input","inp","StyleSheet","create","alignItems","fontSize","marginBottom","fontWeight","color","height","width","margin","paddingLeft","borderWidth","borderRadius","borderColor","textAlign","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ReactDOM } from 'react';\nimport { StyleSheet, Button, TextInput, TouchableOpacity, ScrollView, KeyboardAvoidingView, Alert } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport ButtonDesign from '../components/Button';\nimport { useLinkProps } from '@react-navigation/native';\nimport HomeScreen from '../screens/HomeScreen';\n\nimport OpeningScreen from './OpeningScreen';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport axios from 'axios';\nimport emailSet from '../screens/EmailVerificationScreen';\n\nexport default function Verification({ route, navigation }) {\n  const [verification, setVerificationCode] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [confirmPassword, setConfirmPassword] = React.useState(\"\");\n  const { email } = route.params;\n\n  const handleChangePassword = (email, resetCode: string, newPassword) => {\n    console.log(resetCode);\n    console.log(email);\n    console.log(newPassword);\n    axios\n      .post(\"http://localhost:2400/api/auth/resetpassword\", {\n        email,\n        resetCode,\n        newPassword,\n      })\n      .then((response) => {\n        // console.log(response.data);\n\n        const { message } = response.data;\n        const { status, data } = response;\n        // console.log(status);\n        if (status == 200) {\n          Alert.alert(\"Your password is reset!\");\n          navigation.navigate(\"Login\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\");\n        const { message } = error.response.data;\n        alert(message);\n        console.log(error);\n        console.log(error.response.data);\n      });\n  };\n\n  return (\n    <SafeAreaView style={{ flex: 1, justifyContent: \"center\" }}>\n      <ScrollView\n        contentContainerStyle={{ flexGrow: 1, justifyContent: \"center\" }}\n      >\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n          <Text style={styles.title}>Verification</Text>\n          <Text style={styles.label}>Please enter the verification code</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Verification Code\"\n            maxLength={15}\n            value={verification}\n            onChangeText={(inp) => setVerificationCode(inp)}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Password\"\n            maxLength={20}\n            onChangeText={(inp) => setPassword(inp)}\n            value={password}\n            secureTextEntry={true}\n          />\n\n          <TextInput\n            style={styles.input}\n            placeholder=\"Confirm Password\"\n            maxLength={20}\n            onChangeText={(inp) => setConfirmPassword(inp)}\n            value={confirmPassword}\n            secureTextEntry={true}\n          />\n\n          <ButtonDesign\n            name=\"Confirm\"\n            onPress={() => handleChangePassword(email, verification, password)}\n          />\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: { \n      height: 45,\n      width: 290,\n      margin: 15,\n      paddingLeft: 10,\n      borderWidth: 1,\n      borderRadius: 10,\n      fontSize: 18,\n      borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F', \n  },\n \n  \n});"]},"metadata":{},"sourceType":"module"}