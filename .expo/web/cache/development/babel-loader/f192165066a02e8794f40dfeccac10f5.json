{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Text } from \"../components/Themed\";\nimport ButtonDesign from \"../components/Button\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function EmailVerificationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      email = _React$useState2[0],\n      setEmail = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      message = _React$useState4[0],\n      setMessage = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      showMessage = _React$useState6[0],\n      setShowMessage = _React$useState6[1];\n\n  var handleEmailVerification = function handleEmailVerification(email) {\n    axios.get(\"http://localhost:2400/api/auth/get-reset\", {\n      params: {\n        email: email\n      }\n    }).then(function (response) {\n      var message = response.data.message;\n      var status = response.status,\n          data = response.data;\n      console.log(response);\n\n      if (status == 200) {\n        navigation.navigate(\"VerificationScreen\", {\n          email: email\n        });\n      } else {\n        console.log(response);\n      }\n    }).catch(function (error) {\n      setShowMessage(true);\n      setMessage(\"We did not find the email in the system\");\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    children: _jsx(ScrollView, {\n      contentContainerStyle: {\n        flexGrow: 1,\n        justifyContent: \"center\"\n      },\n      children: _jsxs(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Verification\"\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Please enter your email\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Email\",\n          maxLength: 30,\n          autoCapitalize: \"none\",\n          onChangeText: function onChangeText(inp) {\n            return setEmail(inp);\n          }\n        }), showMessage ? _jsx(Text, {\n          style: styles.message,\n          children: message\n        }) : null, _jsx(ButtonDesign, {\n          name: \"Next\",\n          onPress: function onPress() {\n            return handleEmailVerification(email);\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: {\n    height: 45,\n    width: 290,\n    margin: 15,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderRadius: 10,\n    fontSize: 18,\n    borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F'\n  },\n  message: {\n    textAlign: 'center',\n    marginLeft: 40,\n    marginRight: 40,\n    color: 'red'\n  }\n});","map":{"version":3,"sources":["/Users/dorian/RN_Projects/JD_Project/GT_1358_Project_Design/app/src/screens/EmailVerificationScreen.tsx"],"names":["React","Text","ButtonDesign","SafeAreaView","axios","EmailVerificationScreen","navigation","useState","email","setEmail","message","setMessage","showMessage","setShowMessage","handleEmailVerification","get","params","then","response","data","status","console","log","navigate","catch","error","flex","justifyContent","flexGrow","styles","container","title","label","input","inp","StyleSheet","create","alignItems","fontSize","marginBottom","fontWeight","color","height","width","margin","paddingLeft","borderWidth","borderRadius","borderColor","textAlign","marginLeft","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAIA,SAASC,IAAT;AACA,OAAOC,YAAP;AAIA,SAASC,YAAT,QAA6B,gCAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,eAAe,SAASC,uBAAT,OAA+C;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAC1D,wBAAyBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAzB;AAAA;AAAA,MAAMC,KAAN;AAAA,MAAaC,QAAb;;AACA,yBAA6BT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA7B;AAAA;AAAA,MAAMG,OAAN;AAAA,MAAeC,UAAf;;AACA,yBAAqCX,KAAK,CAACO,QAAN,CAAe,KAAf,CAArC;AAAA;AAAA,MAAMK,WAAN;AAAA,MAAmBC,cAAnB;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACN,KAAD,EAAmB;AAEjDJ,IAAAA,KAAK,CACFW,GADH,CACO,0CADP,EACmD;AAACC,MAAAA,MAAM,EAAE;AAACR,QAAAA,KAAK,EAALA;AAAD;AAAT,KADnD,EAEGS,IAFH,CAEQ,UAACC,QAAD,EAAc;AAElB,UAAQR,OAAR,GAAoBQ,QAAQ,CAACC,IAA7B,CAAQT,OAAR;AACA,UAAQU,MAAR,GAAyBF,QAAzB,CAAQE,MAAR;AAAA,UAAgBD,IAAhB,GAAyBD,QAAzB,CAAgBC,IAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,UAAIE,MAAM,IAAI,GAAd,EAAmB;AAEjBd,QAAAA,UAAU,CAACiB,QAAX,CAAoB,oBAApB,EAA0C;AAACf,UAAAA,KAAK,EAALA;AAAD,SAA1C;AACD,OAHD,MAGO;AAELa,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACD;AAEF,KAfH,EAgBGM,KAhBH,CAgBS,UAACC,KAAD,EAAW;AAEhBZ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,UAAU,CAAC,yCAAD,CAAV;AAED,KArBH;AAsBD,GAxBD;;AA2BF,SACE,KAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEe,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAArB;AAAA,cACE,KAAC,UAAD;AACE,MAAA,qBAAqB,EAAE;AAAEC,QAAAA,QAAQ,EAAE,CAAZ;AAAeD,QAAAA,cAAc,EAAE;AAA/B,OADzB;AAAA,gBAGE,MAAC,oBAAD;AAAsB,QAAA,KAAK,EAAEE,MAAM,CAACC,SAApC;AAA+C,QAAA,QAAQ,EAAC,SAAxD;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,UADF,EAGE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA;AAAA,UAHF,EAIE,KAAC,SAAD;AACE,UAAA,KAAK,EAAEH,MAAM,CAACI,KADhB;AAEE,UAAA,WAAW,EAAC,OAFd;AAGE,UAAA,SAAS,EAAE,EAHb;AAIE,UAAA,cAAc,EAAC,MAJjB;AAKE,UAAA,YAAY,EAAE,sBAACC,GAAD;AAAA,mBAASzB,QAAQ,CAACyB,GAAD,CAAjB;AAAA;AALhB,UAJF,EAYGtB,WAAW,GAAG,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEiB,MAAM,CAACnB,OAApB;AAAA,oBAA8BA;AAA9B,UAAH,GAAmD,IAZjE,EAcE,KAAC,YAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAMI,uBAAuB,CAACN,KAAD,CAA7B;AAAA;AAFX,UAdF;AAAA;AAHF;AADF,IADF;AA4BD;AAGD,IAAMqB,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAE/BN,EAAAA,SAAS,EAAE;AACTJ,IAAAA,IAAI,EAAE,CADG;AAETW,IAAAA,UAAU,EAAE,QAFH;AAGTV,IAAAA,cAAc,EAAE;AAHP,GAFoB;AAO/BI,EAAAA,KAAK,EAAE;AACLO,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,UAAU,EAAE,MAHP;AAILC,IAAAA,KAAK,EAAE;AAJF,GAPwB;AAa/BR,EAAAA,KAAK,EAAE;AACHS,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,KAAK,EAAE,GAFJ;AAGHC,IAAAA,MAAM,EAAE,EAHL;AAIHC,IAAAA,WAAW,EAAE,EAJV;AAKHC,IAAAA,WAAW,EAAE,CALV;AAMHC,IAAAA,YAAY,EAAE,EANX;AAOHT,IAAAA,QAAQ,EAAE,EAPP;AAQHU,IAAAA,WAAW,EAAE;AARV,GAbwB;AAuB/BhB,EAAAA,KAAK,EAAE;AACLiB,IAAAA,SAAS,EAAE,QADN;AAELL,IAAAA,MAAM,EAAE,EAFH;AAGLM,IAAAA,UAAU,EAAE,EAHP;AAILC,IAAAA,WAAW,EAAE,EAJR;AAKLV,IAAAA,KAAK,EAAE;AALF,GAvBwB;AA8B/B/B,EAAAA,OAAO,EAAE;AACPuC,IAAAA,SAAS,EAAE,QADJ;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPV,IAAAA,KAAK,EAAE;AAJA;AA9BsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { ReactDOM } from 'react';\nimport { StyleSheet, Button, TextInput, TouchableOpacity, ScrollView, KeyboardAvoidingView, Alert } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport ButtonDesign from '../components/Button';\nimport { useLinkProps } from '@react-navigation/native';\nimport HomeScreen from '../screens/HomeScreen';\nimport OpeningScreen from './OpeningScreen';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\nimport axios from 'axios';\n\n\n\nexport default function EmailVerificationScreen({navigation}) {\n    const[email, setEmail] = React.useState(\"\");\n    const[message, setMessage] = React.useState(\"\");\n    const[showMessage, setShowMessage] = React.useState(false);\n    \n\n\n    const handleEmailVerification = (email: string) => {\n  \n      axios\n        .get(\"http://localhost:2400/api/auth/get-reset\", {params: {email}})\n        .then((response) => {\n          \n          const { message } = response.data;\n          const { status, data } = response;\n          console.log(response);\n          if (status == 200) {\n            //emailSet = email;\n            navigation.navigate(\"VerificationScreen\", {email})\n          } else {\n            \n            console.log(response);\n          }\n           \n        })\n        .catch((error) => {\n        \n          setShowMessage(true);\n          setMessage(\"We did not find the email in the system\");\n         \n        });\n    };\n    \n\n  return (\n    <SafeAreaView style={{ flex: 1, justifyContent: \"center\" }}>\n      <ScrollView\n        contentContainerStyle={{ flexGrow: 1, justifyContent: \"center\" }}\n      >\n        <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n          <Text style={styles.title}>Verification</Text>\n\n          <Text style={styles.label}>Please enter your email</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Email\"\n            maxLength={30}\n            autoCapitalize=\"none\"\n            onChangeText={(inp) => setEmail(inp)}\n          />\n\n          {showMessage ? <Text style={styles.message}>{message}</Text> : null}\n\n          <ButtonDesign\n            name=\"Next\"\n            onPress={() => handleEmailVerification(email)}\n          />\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </SafeAreaView>\n  );\n  \n}\n\n\nconst styles = StyleSheet.create({\n\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 30,\n    marginBottom: 15,\n    fontWeight: 'bold',\n    color: '#072B4F'\n  },\n  input: { \n      height: 45,\n      width: 290,\n      margin: 15,\n      paddingLeft: 10,\n      borderWidth: 1,\n      borderRadius: 10,\n      fontSize: 18,\n      borderColor: '#072B4F'\n  },\n  label: {\n    textAlign: 'center',\n    margin: 20,\n    marginLeft: 40,\n    marginRight: 40,\n    color: '#072B4F', \n  },\n  message: {\n    textAlign: 'center',\n    marginLeft: 40,\n    marginRight: 40,\n    color: 'red', \n  }\n \n  \n});\n"]},"metadata":{},"sourceType":"module"}