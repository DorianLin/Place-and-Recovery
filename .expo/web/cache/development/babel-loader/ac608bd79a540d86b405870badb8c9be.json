{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"../components/Themed\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { AuthContext } from \"../navigation/context\";\nimport React, { useEffect, useState } from \"react\";\nimport IsTestMode from \"../constants/TestMode\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var testmode = IsTestMode();\n\n  var _React$useContext = React.useContext(AuthContext),\n      signOut = _React$useContext.signOut;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstName = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastName = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var handleSignOut = function handleSignOut() {\n    console.log(\"logging out\");\n    signOut();\n  };\n\n  useEffect(function () {\n    function setProfile() {\n      var firstName, lastName, email;\n      return _regeneratorRuntime.async(function setProfile$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"first_name\"));\n\n            case 2:\n              firstName = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"last_name\"));\n\n            case 5:\n              lastName = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"email\"));\n\n            case 8:\n              email = _context.sent;\n              setFirstName(firstName);\n              setLastName(lastName);\n              setEmail(email);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    setProfile();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Profile screen\"\n    }), _jsxs(Text, {\n      children: [\"Name: \", firstName, \" \", lastName, \"\\n Email: \", email]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      activeOpacity: 0.85,\n      onPress: handleSignOut,\n      children: _jsx(Text, {\n        style: styles.buttonTextWhite,\n        children: \"Log out\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  buttonTextWhite: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  button: {\n    width: 100,\n    height: 45,\n    backgroundColor: \"#072B4F\",\n    padding: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    marginTop: 5\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/Users/dorian/RN_Projects/JD_Project/GT_1358_Project_Design/app/src/screens/ProfileScreen.tsx"],"names":["Text","View","TouchableOpacity","AuthContext","React","useEffect","useState","IsTestMode","SecureStore","ProfileScreen","navigation","testmode","useContext","signOut","firstName","setFirstName","lastName","setLastName","email","setEmail","handleSignOut","console","log","setProfile","getItemAsync","styles","container","button","buttonTextWhite","StyleSheet","create","flex","alignItems","justifyContent","textAlign","color","fontSize","fontWeight","width","height","backgroundColor","padding","borderRadius","marginTop","title"],"mappings":"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","sourcesContent":["import { StyleSheet, Button } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { AuthContext } from \"../navigation/context\";\nimport React, { useEffect, useState } from \"react\";\nimport IsTestMode from \"../constants/TestMode\";\n\nimport * as SecureStore from \"expo-secure-store\";\n\nexport default function ProfileScreen({\n  navigation,\n}: RootTabScreenProps<\"TabOne\">) {\n  let testmode = IsTestMode();\n  const { signOut } = React.useContext(AuthContext);\n\n  const [firstName, setFirstName] = useState<string | null>(\"\");\n  const [lastName, setLastName] = useState<string | null>(\"\");\n  const [email, setEmail] = useState<string | null>(\"\");\n\n  const handleSignOut = () => {\n    // if (testmode) {\n    //   signOut();\n    //   return;\n    // }\n    console.log(\"logging out\");\n    signOut();\n  };\n\n  useEffect(() => {\n    async function setProfile() {\n      const firstName = await SecureStore.getItemAsync(\"first_name\");\n      const lastName = await SecureStore.getItemAsync(\"last_name\");\n      const email = await SecureStore.getItemAsync(\"email\");\n      setFirstName(firstName);\n      setLastName(lastName);\n      setEmail(email);\n    }\n    setProfile();\n  }, []);\n\n  // console.log(firstName);\n  return (\n    <View style={styles.container}>\n      <Text>Profile screen</Text>\n      <Text>\n        Name: {firstName} {lastName}\n        {\"\\n Email: \"}\n        {email}\n      </Text>\n      <TouchableOpacity\n        style={styles.button}\n        activeOpacity={0.85}\n        onPress={handleSignOut}\n      >\n        <Text style={styles.buttonTextWhite}>Log out</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  buttonTextWhite: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  button: {\n    width: 100,\n    height: 45,\n    backgroundColor: \"#072B4F\",\n    padding: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    marginTop: 5,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n});"]},"metadata":{},"sourceType":"module"}